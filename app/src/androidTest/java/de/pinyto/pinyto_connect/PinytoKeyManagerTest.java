package de.pinyto.pinyto_connect;

import android.util.Log;

import junit.framework.TestCase;

import java.io.UnsupportedEncodingException;
import java.math.BigInteger;

/**
 * Tests the PinytoKeyManager
 */
public class PinytoKeyManagerTest extends TestCase {

    public void testDecryptToken() {
        byte[] expected;
        try {
            expected = "1234567890123456".getBytes("UTF-8");
        } catch (UnsupportedEncodingException e) {
            Log.d("Test error", "UTF-8 is not supported!");
            expected = "1234567890123456".getBytes();
        }
        String encryptedToken = "PbZ5If4jo6t5TG0N9S2ai0R/T7I6RMXZtBYyJaZL57+1sf9+3tbAkCi9z0JD6AR" +
                "Or3+rTWSgP5db/pK2ftDOwAhqQ1z7xrGh1IZO6YmCSKouaXupFFSlRs3ocrD4l0Ah5kMtA1NooAAmKF" +
                "CbBKtC3Rbh4mZ5oEg9C+DxuYg3NQreUc4Yib6FWTWyNwhA/QtJ/lNUNjWDNW/vKC/2zX/425VSgyUTu" +
                "OeatMd6G0l3bYdrllny1VsLVa+Wyys0XutmNW4bn2h0Dv5jemPGnzrRbVjEbwtb8Q2HaRLQRkcV6lYX" +
                "5ghfDtEg1TX11xatxDNJEPrAXK4F4g/2Qzb5gXpvmdGXNhl9PD6733R9Wk77utvNEqh/mP0Sgy12MHU" +
                "Y7FSh7tdDL8WLTzqOewz1c5KlRXKsK0NMWBmOnWfPyPVBr+tvySG6UyyAPoU53yYPO5vqjT5PCBZ4OA" +
                "g9Tu86gFAWtyox2mzuj5Y3MGCsqLfPrPF98s4KPZnM3DyYejjTavF/w1x8AqfVprRkgjYLhEWsXBDr4" +
                "Tte3l4bh4e13E1Ww1vj80hSw1PJTy+1ZeFYZ6ivQVyyswsp3qXRvIl1GD25jll/E6IDsfhPtHQVEgfy" +
                "WtQgrdHdS4zRCxR6+DrvudXbz9E0hvjcD51UXxQfhG6extuivq5rfkUe3mYf6EBjCWM=";
        BigInteger N = new BigInteger("712648493111275837183508738330952001373850662122054891062" +
                "3634333718689391234520581210713648116289107743075355353768978498497680413631784" +
                "8984094853333154632935690419682123426913367572501896864957590058943064654984604" +
                "1129158218761585794058287884683489333774466196314090189340577567913819515367816" +
                "5854485583479822299810494732806396685005940982933550410142229369031110063879869" +
                "5805478476293460349676931877054501841138962510738363558448140650871722454895865" +
                "1078376437936560569438001068555723368848906897018884237603592544787687711687686" +
                "3066389344837780861921971689310067135751190726434070661261157160912289685713604" +
                "7100625752062013770803667199593156016518331965137071326271757770328870828293533" +
                "4731071561709461651053002496774900154989653578040750561552512588189547243087620" +
                "6458722952884345868717458729171204773437025032081188487742021555251320163604592" +
                "3066282608990353667111376596587993204221492893422869342351311281618504099436106" +
                "8046221159088465433119393704069686591555811433556303692656499147931936659711168" +
                "6556965455832487839466832047547956436747582640482075086304719774636427274847244" +
                "8735043308692209729131861588522444688036056635677722918653307388206574397823464" +
                "4726290378862384021528156574779650232976104204207893901091325937268271");
        BigInteger e = new BigInteger("65537");
        BigInteger d = new BigInteger("518449957345612545054478075379451752773280007761346004487" +
                "1044414041528797401154649601971486563138869325332969048888373847618481266477504" +
                "9267797952564477266110866347705941388046073807494170296587393057819055443800539" +
                "4646627180891937187987107279337464401112333480444072692484856756992158427357168" +
                "6095032785283900203096949324362472819135957614543018698670387900829535462802148" +
                "7382907407917963937194207211715588732804727933640290183250537100451073183156462" +
                "0994473836274765931148282877559237969085832171690287359513924734888496188684949" +
                "0780464641090921402180688255533902694635782404671004485826471323343701231906453" +
                "5356567731029736204919774579274131404940020915513928136069564140914401178799550" +
                "6460524849500715122431508146309310337028092313374072337016532878426711415628876" +
                "7958105178100942592306229281171489870617374831201439819379867673794549555826942" +
                "7662813851369091580776816252790011330873003870394910376795312289147012246590602" +
                "7893610867505494483257694819471691266373836101671057949804516569604822414658651" +
                "7627021078216817387133824120998696323454197032824488626530226288653358744007002" +
                "8307521135040873781900024855420768876844474249154490389295767856642502685439486" +
                "7401966755168302984118915566331574786599932693742755207267708684726881");
        PinytoKeyManager manager = new PinytoKeyManager(N, e, d);
        byte[] decrypted = manager.decryptToken(encryptedToken);
        assertEquals(expected.length, decrypted.length);
        assertEquals(Hextools.bytesToHex(expected), Hextools.bytesToHex(decrypted));
        for (int i = 0; i < expected.length; i++) {
            assertEquals(expected[i], decrypted[i]);
        }
    }

}
